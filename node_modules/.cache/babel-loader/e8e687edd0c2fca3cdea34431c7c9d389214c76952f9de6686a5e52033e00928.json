{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kpkov\\\\Downloads\\\\praonica-master\\\\praonica-master\\\\src\\\\pages\\\\Comments.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addComment, setLoading, setError } from '../redux/slices/commentsSlice';\nimport './Comments.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [newComment, setNewComment] = useState('');\n  const [author, setAuthor] = useState('');\n  const [password, setPassword] = useState(''); // Dodajemo state za lozinku\n  const dispatch = useDispatch();\n  const {\n    comments,\n    loading,\n    error\n  } = useSelector(state => state.comments);\n  const handleAddComment = () => {\n    if (newComment && author && password) {\n      // Provjera ispravnosti korisničkog imena i lozinke\n      if (password === 'testPass') {\n        dispatch(setLoading(true));\n        try {\n          const newCommentObj = {\n            id: comments.length + 1,\n            text: newComment,\n            author\n          };\n          dispatch(addComment(newCommentObj));\n          setNewComment('');\n          setAuthor('');\n          setPassword(''); // Resetiramo lozinku\n        } catch (err) {\n          dispatch(setError('Error adding comment'));\n        } finally {\n          dispatch(setLoading(false));\n        }\n      } else {\n        dispatch(setError('Invalid password'));\n      }\n    } else {\n      dispatch(setError('All fields are required'));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"User\",\n        placeholder: \"Your name\",\n        value: author,\n        onChange: e => setAuthor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write a comment...\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        disabled: loading,\n        children: loading ? 'Adding...' : 'Add Comment'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: comments.length > 0 ? comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [comment.author, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 18\n          }, this), \" \", comment.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"DOVHZSCgSBIQbJDlM2U/i2cJnhw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","addComment","setLoading","setError","jsxDEV","_jsxDEV","Comments","_s","newComment","setNewComment","author","setAuthor","password","setPassword","dispatch","comments","loading","error","state","handleAddComment","newCommentObj","id","length","text","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","map","comment","_c","$RefreshReg$"],"sources":["C:/Users/kpkov/Downloads/praonica-master/praonica-master/src/pages/Comments.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../redux/store';\nimport { addComment, setLoading, setError } from '../redux/slices/commentsSlice';\nimport './Comments.css';\nconst Comments: React.FC = () => {\n  const [newComment, setNewComment] = useState('');\n  const [author, setAuthor] = useState('');\n  const [password, setPassword] = useState(''); // Dodajemo state za lozinku\n  const dispatch = useDispatch();\n  const { comments, loading, error } = useSelector((state: RootState) => state.comments);\n\n  const handleAddComment = () => {\n    if (newComment && author && password) {\n      // Provjera ispravnosti korisničkog imena i lozinke\n      if (password === 'testPass') { \n        dispatch(setLoading(true));\n        try {\n          const newCommentObj = {\n            id: comments.length + 1,\n            text: newComment,\n            author,\n          };\n          dispatch(addComment(newCommentObj));\n          setNewComment('');\n          setAuthor('');\n          setPassword(''); // Resetiramo lozinku\n        } catch (err) {\n          dispatch(setError('Error adding comment'));\n        } finally {\n          dispatch(setLoading(false));\n        }\n      } else {\n        dispatch(setError('Invalid password'));\n      }\n    } else {\n      dispatch(setError('All fields are required'));\n    }\n  };\n\n  return (\n    <div className=\"comments-section\">\n      <h2>Comments</h2>\n      <div className=\"comment-form\">\n        <input\n          type=\"User\"\n          placeholder=\"Your name\"\n          value={author}\n          onChange={(e) => setAuthor(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <textarea\n          placeholder=\"Write a comment...\"\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n        />\n        <button onClick={handleAddComment} disabled={loading}>\n          {loading ? 'Adding...' : 'Add Comment'}\n        </button>\n      </div>\n      {error && <p className=\"error\">{error}</p>}\n      <div className=\"comments-list\">\n        {comments.length > 0 ? (\n          comments.map((comment) => (\n            <div key={comment.id} className=\"comment\">\n              <p><strong>{comment.author}:</strong> {comment.text}</p>\n            </div>\n          ))\n        ) : (\n          <p>No comments yet.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Comments;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}